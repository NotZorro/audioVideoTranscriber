# auToTxt - Автоматическая транскрипция аудио и видео на русском языке

## Описание проекта

`auToTxt` — это Python-скрипт для автоматической транскрипции аудио- и видеофайлов на русском языке с использованием модели `faster-whisper`. Программа извлекает аудиодорожку из видеофайлов, разбивает её на сегменты, выполняет транскрипцию с разделением на реплики и сохраняет результат в текстовый файл. Скрипт оптимизирован для обработки больших файлов, поддерживает GPU-ускорение (при наличии CUDA) и включает обработку ошибок для надежной работы.

Основные возможности:
- Транскрипция аудио- и видеофайлов на русском языке.
- Разделение транскрипции на реплики с временными метками.
- Извлечение аудио из видеофайлов с помощью FFmpeg.
- Поддержка модели `systran/faster-whisper-small` для высокой скорости и точности.
- Сохранение результата в текстовый файл в папке `texts`.

## Требования

### Программное обеспечение
- **Python 3.8+**
- **FFmpeg** (установлен и доступен в системе)
  - Скачайте с [официального сайта](https://ffmpeg.org/download.html) и добавьте в PATH или укажите путь в скрипте:
    ```python
    AudioSegment.converter = "C:/path/to/ffmpeg.exe"
    ```


### Аппаратные требования
- **CPU**: Минимум 2-4 ГБ RAM для модели `systran/faster-whisper-small`.
- **GPU (опционально)**: NVIDIA с CUDA для ускорения (около 1 ГБ VRAM).
- **Диск**: Достаточно места для временных файлов (папки `audio` и `temp_segments`).

## Установка

1. **Клонируйте репозиторий или скачайте скрипт**:
   ```bash
   git clone <репозиторий>
   cd auToTxt
   ```
   Или скопируйте файл `auToTxt.py` в рабочую директорию.

2. **Установите зависимости**:
   ```bash
   pip install -r requirements.txt
   ```

3. **Установите FFmpeg**:
   - Windows: Скачайте FFmpeg, распакуйте и укажите путь в скрипте.
   - Linux/macOS: Установите через пакетный менеджер, например:
     ```bash
     sudo apt-get install ffmpeg  # Ubuntu
     brew install ffmpeg         # macOS
     ```

4. **Проверьте интернет-соединение**:
   - При первом запуске модель `systran/faster-whisper-small` будет загружена из Hugging Face Hub. Убедитесь, что интернет доступен и переменная `HF_HUB_OFFLINE` не установлена в `1`.

## Использование

1. **Запустите скрипт**:
   ```bash
   python auToTxt.py
   ```

2. **Введите путь к файлу**:
   - Укажите путь к аудио- (например, `audio/1.ogg`) или видеофайлу (например, `audio/1.mp4`).
   - Поддерживаемые форматы видео: `.mp4`, `.mkv`, `.avi`, `.mov`, `.flv`, `.wmv`.
   - Поддерживаемые форматы аудио: `.ogg`, `.wav`, `.mp3` и другие, совместимые с FFmpeg.

3. **Результат**:
   - Транскрипция сохраняется в папке `texts` с именем `<имя_файла>_<расширение>.txt`.
   - Формат: `Реплика <номер> [<начало> - <конец>]: <текст>`, где время в формате `ЧЧ:ММ:СС`.
   - Пример:
     ```
     Реплика 1 [00:00:01 - 00:00:06]: Привет, как дела?
     Реплика 2 [00:00:07 - 00:00:10]: Отлично, а у тебя?
     ```

## Структура проекта

- `auToTxt.py`: Основной скрипт для транскрипции.
- `audio/`: Папка для хранения извлеченных аудиофайлов из видео.
- `temp_segments/`: Временная папка для сегментов аудио.
- `texts/`: Папка для сохранения результатов транскрипции.

## Настройки

- **Модель**: По умолчанию используется `systran/faster-whisper-small`. Для других моделей измените `model_size` в функции `main`:
  ```python
  model_size = "systran/faster-whisper-medium"  # Более точная, но медленная модель
  ```
- **Длительность сегмента**: По умолчанию 10 минут (`SEGMENT_LENGTH_S = 600`). Измените в начале скрипта:
  ```python
  SEGMENT_LENGTH_S = 300  # 5 минут
  ```
- **Язык**: По умолчанию русский (`language="ru"`). Для другого языка измените в `transcribe_audio_segments`, убедитесь, что выбрана модель под ваш язык:
  ```python
  language="en"  # Английский
  ```

## Устранение неполадок

1. **Ошибка `ModuleNotFoundError`**:
   - Убедитесь, что все зависимости установлены:
     ```bash
     pip install faster-whisper pydub torch huggingface_hub
     ```

2. **Ошибка `LocalEntryNotFoundError`**:
   - Проверьте интернет-соединение.
   - Убедитесь, что `HF_HUB_OFFLINE` не равно `1`:
     ```bash
     unset HF_HUB_OFFLINE
     ```
   - Очистите кэш Hugging Face, если поврежден:
     ```bash
     rm -rf ~/.cache/huggingface/hub
     ```

3. **Ошибка с FFmpeg**:
   - Проверьте, что FFmpeg установлен и путь в скрипте корректен.
   - Убедитесь, что FFmpeg доступен в PATH или указан явно.

4. **Проблемы с точностью транскрипции**:
   - Попробуйте модель побольше (например, `systran/faster-whisper-medium`).
   - Убедитесь, что аудио четкое, без сильного шума.

## Лицензия

Проект распространяется под лицензией MIT.
